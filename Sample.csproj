<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <RollForward>Major</RollForward>
    <PublishReadyToRun>false</PublishReadyToRun>
    <TieredCompilation>false</TieredCompilation>
    <AssemblyName>Sample</AssemblyName>
    <Product>SampleGame</Product>
    <Nullable>enable</Nullable>
    <RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>
    <UseAppHost>true</UseAppHost>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ApplicationIcon>Icon.ico</ApplicationIcon>
  </PropertyGroup>

  
  <!-- Define properties for platform detection -->
  <PropertyGroup>
    <IsWindows Condition="'$(RuntimeIdentifier)' == 'win-x64' or ('$(RuntimeIdentifier)' == '' and $([MSBuild]::IsOSPlatform('Windows')))">true</IsWindows>
    <IsOSX Condition="'$(RuntimeIdentifier)' == 'osx-x64' or ('$(RuntimeIdentifier)' == '' and $([MSBuild]::IsOSPlatform('OSX')))">true</IsOSX>
    <IsLinux Condition="'$(RuntimeIdentifier)' == 'linux-x64' or ('$(RuntimeIdentifier)' == '' and $([MSBuild]::IsOSPlatform('Linux')))">true</IsLinux>
    
    <IsWindows Condition="'$(IsWindows)' == ''">false</IsWindows>
    <IsOSX Condition="'$(IsOSX)' == ''">false</IsOSX>
    <IsLinux Condition="'$(IsLinux)' == ''">false</IsLinux>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants Condition="$(IsWindows)">$(DefineConstants);WINDOWS</DefineConstants>
    <DefineConstants Condition="$(IsOSX)">$(DefineConstants);OSX</DefineConstants>
    <DefineConstants Condition="$(IsLinux)">$(DefineConstants);Linux</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Icon.ico" />
    <None Remove="Icon.bmp" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Icon.ico" />
    <EmbeddedResource Include="Icon.bmp" />
  </ItemGroup>
  <ItemGroup>
    <MonoGameContentReference Include="Content\Content.mgcb" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.2.1105" />
    <PackageReference Include="MonoGame.Content.Builder.Task" Version="3.8.2.1105" />
  </ItemGroup>

  <ItemGroup Condition="$(IsOSX)">
    <Content Include="./Info.plist">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="./Icon.icns">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <!-- Steamworks -->
    <Reference Include="Facepunch.Steamworks, Version=2.4.1, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath Condition="$(IsWindows)">Steamworks/Facepunch.Steamworks.Win64.dll</HintPath>
      <HintPath Condition="$(IsOSX) or $(IsLinux)">Steamworks/Facepunch.Steamworks.Posix.dll</HintPath>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Reference>

    <Content Include="Steamworks/steam_api64.dll" Condition="$(IsWindows)">
      <Link>steam_api64.dll</Link>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>

    <Content Include="Steamworks/libsteam_api.dylib" Condition="$(IsOSX)">
      <Link>Lib/libsteam_api.dylib</Link>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>

    <Content Include="Steamworks/libsteam_api.so" Condition="$(IsLinux)">
      <Link>libsteam_api.so</Link>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>

    <!-- Steamworks -->
  </ItemGroup>

  <Target Name="RestoreDotnetTools" BeforeTargets="Restore">
    <Message Text="Restoring dotnet tools" Importance="High" />
    <Exec Command="dotnet tool restore" />
  </Target>
</Project>